# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  name: String
  email: String
  password: PasswordState
}

type PasswordState {
  isSet: Boolean!
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  email: StringFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  name: String
  email: String
  password: String
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  email: String
  password: String
}

type Venue {
  id: ID!
  name: String
  address: String
  a11yTags(
    where: VenueA11yTagWhereInput! = {}
    orderBy: [VenueA11yTagOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [VenueA11yTag!]
  a11yTagsCount(where: VenueA11yTagWhereInput! = {}): Int
}

input VenueWhereUniqueInput {
  id: ID
}

input VenueWhereInput {
  AND: [VenueWhereInput!]
  OR: [VenueWhereInput!]
  NOT: [VenueWhereInput!]
  id: IDFilter
  name: StringFilter
  address: StringFilter
  a11yTags: VenueA11yTagManyRelationFilter
}

input VenueA11yTagManyRelationFilter {
  every: VenueA11yTagWhereInput
  some: VenueA11yTagWhereInput
  none: VenueA11yTagWhereInput
}

input VenueOrderByInput {
  id: OrderDirection
  name: OrderDirection
  address: OrderDirection
}

input VenueUpdateInput {
  name: String
  address: String
  a11yTags: VenueA11yTagRelateToManyForUpdateInput
}

input VenueA11yTagRelateToManyForUpdateInput {
  disconnect: [VenueA11yTagWhereUniqueInput!]
  set: [VenueA11yTagWhereUniqueInput!]
  create: [VenueA11yTagCreateInput!]
  connect: [VenueA11yTagWhereUniqueInput!]
}

input VenueUpdateArgs {
  where: VenueWhereUniqueInput!
  data: VenueUpdateInput!
}

input VenueCreateInput {
  name: String
  address: String
  a11yTags: VenueA11yTagRelateToManyForCreateInput
}

input VenueA11yTagRelateToManyForCreateInput {
  create: [VenueA11yTagCreateInput!]
  connect: [VenueA11yTagWhereUniqueInput!]
}

type VenueA11yTag {
  id: ID!
  name: String
  venues(
    where: VenueWhereInput! = {}
    orderBy: [VenueOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Venue!]
  venuesCount(where: VenueWhereInput! = {}): Int
}

input VenueA11yTagWhereUniqueInput {
  id: ID
}

input VenueA11yTagWhereInput {
  AND: [VenueA11yTagWhereInput!]
  OR: [VenueA11yTagWhereInput!]
  NOT: [VenueA11yTagWhereInput!]
  id: IDFilter
  name: StringFilter
  venues: VenueManyRelationFilter
}

input VenueManyRelationFilter {
  every: VenueWhereInput
  some: VenueWhereInput
  none: VenueWhereInput
}

input VenueA11yTagOrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input VenueA11yTagUpdateInput {
  name: String
  venues: VenueRelateToManyForUpdateInput
}

input VenueRelateToManyForUpdateInput {
  disconnect: [VenueWhereUniqueInput!]
  set: [VenueWhereUniqueInput!]
  create: [VenueCreateInput!]
  connect: [VenueWhereUniqueInput!]
}

input VenueA11yTagUpdateArgs {
  where: VenueA11yTagWhereUniqueInput!
  data: VenueA11yTagUpdateInput!
}

input VenueA11yTagCreateInput {
  name: String
  venues: VenueRelateToManyForCreateInput
}

input VenueRelateToManyForCreateInput {
  create: [VenueCreateInput!]
  connect: [VenueWhereUniqueInput!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createVenue(data: VenueCreateInput!): Venue
  createVenues(data: [VenueCreateInput!]!): [Venue]
  updateVenue(where: VenueWhereUniqueInput!, data: VenueUpdateInput!): Venue
  updateVenues(data: [VenueUpdateArgs!]!): [Venue]
  deleteVenue(where: VenueWhereUniqueInput!): Venue
  deleteVenues(where: [VenueWhereUniqueInput!]!): [Venue]
  createVenueA11yTag(data: VenueA11yTagCreateInput!): VenueA11yTag
  createVenueA11yTags(data: [VenueA11yTagCreateInput!]!): [VenueA11yTag]
  updateVenueA11yTag(
    where: VenueA11yTagWhereUniqueInput!
    data: VenueA11yTagUpdateInput!
  ): VenueA11yTag
  updateVenueA11yTags(data: [VenueA11yTagUpdateArgs!]!): [VenueA11yTag]
  deleteVenueA11yTag(where: VenueA11yTagWhereUniqueInput!): VenueA11yTag
  deleteVenueA11yTags(where: [VenueA11yTagWhereUniqueInput!]!): [VenueA11yTag]
  endSession: Boolean!
  authenticateUserWithPassword(
    email: String!
    password: String!
  ): UserAuthenticationWithPasswordResult
  createInitialUser(
    data: CreateInitialUserInput!
  ): UserAuthenticationWithPasswordSuccess!
}

union UserAuthenticationWithPasswordResult =
    UserAuthenticationWithPasswordSuccess
  | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  name: String
  email: String
  password: String
}

type Query {
  users(
    where: UserWhereInput! = {}
    orderBy: [UserOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [User!]
  user(where: UserWhereUniqueInput!): User
  usersCount(where: UserWhereInput! = {}): Int
  venues(
    where: VenueWhereInput! = {}
    orderBy: [VenueOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Venue!]
  venue(where: VenueWhereUniqueInput!): Venue
  venuesCount(where: VenueWhereInput! = {}): Int
  venueA11yTags(
    where: VenueA11yTagWhereInput! = {}
    orderBy: [VenueA11yTagOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [VenueA11yTag!]
  venueA11yTag(where: VenueA11yTagWhereUniqueInput!): VenueA11yTag
  venueA11yTagsCount(where: VenueA11yTagWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  enableSignout: Boolean!
  enableSessionItem: Boolean!
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
